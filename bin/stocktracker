#!/usr/bin/python

import sys
import os
import gtk

# Check if we are working in the source tree or from the installed 
# package and mangle the python path accordingly
source_start = False
if os.path.dirname(sys.argv[0]) != ".":
    # we run from the source
    source_start = True
    if sys.argv[0][0] == "/":
        fullPath = os.path.dirname(sys.argv[0])
    else:
        fullPath = os.getcwd() + "/" + os.path.dirname(sys.argv[0])
else:
    fullPath = os.getcwd()
sys.path.insert(0, os.path.dirname(fullPath))

from stocktracker import config


def init_translations():
    import locale
    locale.setlocale(locale.LC_ALL, '')
    import gettext
    from os.path import pardir, abspath, dirname, join

    GETTEXT_DOMAIN = 'stocktracker'
    LOCALE_PATH = abspath(join(dirname(__file__), pardir, 'locales'))
    if not os.path.isdir(LOCALE_PATH):
        LOCALE_PATH = '/usr/share/locale'
    
    # setup translation
    languages_used = []
    
    lc, encoding = locale.getdefaultlocale()
    if lc:
        languages_used = [lc]
    lang_in_env = os.environ.get('LANGUAGE', None)
    if lang_in_env:
        languages_used.extend(lang_in_env.split())
    
    gettext.bindtextdomain(GETTEXT_DOMAIN, LOCALE_PATH)
    gettext.textdomain(GETTEXT_DOMAIN)
    
    translation = gettext.translation(GETTEXT_DOMAIN, LOCALE_PATH,
                                      languages=languages_used,
                                      fallback=True)
    import __builtin__
    __builtin__._ = translation.gettext
    

def init_icons():
    from stocktracker.gui.icons import IconManager
    icons = IconManager()
    path = os.path.join(config.getdatapath(),'images')
    iconNames = [
    'stocktracker','tags','tag','watchlists','watchlist','portfolio',
    'portfolios', 'index', 'indices','arrow_down','arrow_med_down',
    'arrow_up','arrow_med_up','arrow_right','A','F'
    ]
    for name in iconNames:
        icons.add_icon_name_from_directory(name, path)
    #icons.add_icon_name_from_directory('tag', path)
    #icons.add_icon_name_from_directory('tags', path)
    #icons.add_stock_from_directory('stocktracker-chart', path)
    gtk.window_set_default_icon_name('stocktracker')    

    
def start():
    init_translations()
    init_icons()
    
    from stocktracker import config
    configs = config.StocktrackerConfig()
    db_file = configs.get_option('database file')
    
    from stocktracker.objects import model, controller, store
    model.store = store.Store(db_file)
    controller.createTables()
    controller.initialLoading()
    
    from stocktracker.gui.mainwindow import MainWindow    
    window = MainWindow()
    gtk.main()


if __name__ == "__main__":
    #support for command line options
    import optparse
    import stocktracker
    parser = optparse.OptionParser(version="%prog "+stocktracker.__version__)
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose", help="Show debug messages")
    parser.add_option("-d", "--debug", action="store_true", dest="debug", help="Enable debugging")
    (options, args) = parser.parse_args()

    #set the logging level to show debug messages
    if options.verbose:
        print "please tell the guys to implement this"
    if options.debug or source_start:
        import stocktracker.logger
    
    #gobject.threads_init()

    #run the application
    start()

